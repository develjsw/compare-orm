generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("MYSQL_DB_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tb_goods {
  goods_id     Int          @id @default(autoincrement()) @db.UnsignedInt
  goods_name   String       @db.VarChar(200)
  goods_price  Int
  goods_is_use String       @default("N") @db.Char(1)
  reg_date     DateTime     @db.DateTime(0)
  mod_date     DateTime?    @db.DateTime(0)
  del_date     DateTime?    @db.DateTime(0)
  tb_payment   tb_payment[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tb_member {
  member_id     Int          @id @db.UnsignedInt
  member_name   String       @db.VarChar(45)
  nick_name     String?      @db.VarChar(45)
  password      String       @db.VarChar(300)
  tel           String       @db.VarChar(13)
  email         String?      @db.VarChar(100)
  member_status String       @db.VarChar(45)
  reg_date      DateTime     @db.DateTime(0)
  mod_date      DateTime?    @db.DateTime(0)
  del_date      DateTime?    @db.DateTime(0)
  drop_date     DateTime?    @db.DateTime(0)
  tb_payment    tb_payment[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model tb_payment {
  payment_id     Int       @id @default(autoincrement()) @db.UnsignedInt
  member_id      Int       @db.UnsignedInt
  goods_id       Int       @db.UnsignedInt
  amount         Int
  payment_status String    @db.Char(10)
  reg_date       DateTime  @db.DateTime(0)
  mod_date       DateTime? @db.DateTime(0)
  tb_goods       tb_goods  @relation(fields: [goods_id], references: [goods_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_payment_goods")
  tb_member      tb_member @relation(fields: [member_id], references: [member_id], onDelete: NoAction, onUpdate: NoAction, map: "fk_payment_member")

  @@index([goods_id], map: "fk_payment_goods")
  @@index([member_id], map: "fk_payment_member")
}
